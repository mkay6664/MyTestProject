/* ==============================
   Edit the CSS below to create your grid.
   ============================== */
@supports (grid-area: auto){


  /* MEDIA QUERIES */
  /* Here is where you can add media queries to change the layout at different breakpoints.  */


    .boxes {
      display: grid;
      grid-template-columns: 1fr;
    }

  /*   This rule only applies to screen sizes between 600 and 899 px wide. */
    @media (min-width: 800px) {
        .grid{
          display: grid;
          grid-template-columns: 25em 1fr;
          grid-template-areas:
            "article-header article-header"
            "article-author article-author"
            "article-date article-date"
            "article-summary article-sidebar"
            "image-caption image-caption"
            "empty article-story"

        }

        .article-header{ grid-area: article-header; }
        .article-author{ grid-area: article-author; }
        .article-date{ grid-area: article-date; margin-bottom: 2em}
        .article-summary{ grid-area: article-summary; }
        .article-sidebar{ grid-area: article-sidebar; }
        .image-caption{ grid-area: image-caption; }
        .article-story{ grid-area: article-story; }

          }

@media (min-width: 1200px) {
  .grid{
    grid-template-columns: 1fr 60em;
    grid-template-areas:
      "article-header article-header"
      "article-author article-sidebar"
      "article-date article-sidebar"
      "article-summary article-sidebar"
      "empty article-story"

}
}

} /* end @supports




/* ---------------------------
   This uses Flexbox to center the content in the boxes. It also gives them a some styling. The CSS below is not required for the grid layout.
*/

article-header,article-author,article-date,article-summary,article-sidebar,image-caption,article-story,footer{
  display: flex;
  align-items: center;

/*   height: 10em;   */
}

article-story{
  display: flex;
  justify-content: center;
  align-items: center;

}

/* Grid */
img{
  width: auto;
  height: auto;
  max-width: 100%;
}

/* Basic Nav styling */
nav h1{
  display:inline-block;
}
.topnav ul{
  list-style-type:none;
  margin:0 0 0 2em;
  padding: 0;
  display:inline-block;
}
.topnav ul li{
  margin:0 1em 0 0;
  padding: 0;
  display: inline-block;
}




/*   This rule only applies to screen sizes 900px and larger */
/*   Copy what you did above for 600px and larger and change it so that it is for 900px and larger and uses a different number of columns */



/*   IF you like you can add another media query for an even larger screen size (1200px or larger). Copy the one for 900px and modify as you see fit. */


/* this ends @supports */
